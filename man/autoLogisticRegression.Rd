% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LogisticReg.R
\name{autoLogisticRegression}
\alias{autoLogisticRegression}
\title{Auto Logistic Regression Model with Optional Bagging}
\usage{
autoLogisticRegression(X, y, bagging = FALSE, B = 100)
}
\arguments{
\item{X}{A matrix of predictors.}

\item{y}{A vector representing the response variable, which must be binary.}

\item{bagging}{A logical indicating whether bagging should be used.
Defaults to FALSE.}

\item{B}{An integer specifying the number of bootstrap samples to use if bagging is TRUE.
Defaults to 100.}
}
\value{
A list containing the following components:
        \itemize{
          \item{glm}{The fitted glm model object.}
          \item{coefficients}{A matrix containing estimates, standard errors, z-values, and p-values for each coefficient.}
          \item{fitted.values}{The fitted values using the fitted model.}
}
}
\description{
The autoLogisticRegression function automates logistic regression modeling on a given dataset X
and response variable y. It checks for binary responses and suggests logistic regression if
applicable. The function handles scenarios where the number of predictors exceeds the number
of observations by selecting the most significant predictors. It then estimates coefficients
using logistic regression (glm). If the bagging option is enabled, it performs
bagging by repeatedly sampling with replacement, calculates standard errors, z-values, and p-values
for each coefficient. The function returns a summary including the logistic model object,
coefficients, and fitted values, offering a streamlined approach to logistic regression analysis.
}
\examples{
\dontrun{
  # Generate synthetic data
  set.seed(123)
  n <- 100
  p <- 5
  X <- matrix(rnorm(n * p), n, p)
  y <- rbinom(n, 1, 0.5)
  colnames(X) <- paste0("Var", 1:ncol(X))

  # Use the function without bagging
  result_without_bagging <- autoLogisticRegression(X = X, y = y)
  print(result_without_bagging$glm)

  # Use the function with bagging
  result_with_bagging <- autoLogisticRegression(X = X, y = y, bagging = TRUE, B = 50)
  print(head(result_with_bagging$fitted.values))  # Print first 5 fitted values
  print(result_with_bagging$coefficients)  # Print coefficients
}
}
